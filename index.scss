@import 'general';

body {

    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    -webkit-tap-highlight-color: transparent;
    
    > * { transition: opacity .4s, background .4s; }

    &.setting-scene * { opacity: 0; background: black; }
    &.fadeout {

        background: black !important;

    }

}
button, select {

    -webkit-appearance: none;
    appearance: none;
    border: 1px solid white;
    padding: 10px;
    color: #fff;
    margin: 5px;
    background: black;
    display: block;
    outline: none;
    transition: border-color .4s, color .4s;

    &:hover, &:focus {

        border-style: solid;

    }
    &:focus {

        border-color: var(--green);

    }

}
button {

    cursor: pointer;

    &:hover {

        color: var(--green);
        border-color: var(--green);

    }

    &[disabled]{

        opacity: .5;

    }

}
select {

    -webkit-appearance: none;
    appearance: none;
    border: 1px dashed white;
    background: svg('<path d="M .1 .2 L .9 .2 L .5 .8 z" fill="white" />') no-repeat 100% 50% / 10px auto black;
    background-position: right 10px top 50%;
    padding-right: 30px;
    transition: border-color .4s, color .4s, padding-right .4s;
    border: 1px dashed white;

    &:hover, &:focus {

        border-style: solid;

    }
    &:focus {

        border-color: var(--green);

    }

    &[disabled]{

        padding-right: 10px;
        background-position: right -20px top 50%;

    }

}
input {

    background: transparent;
    border: var( --border, 1px solid red );
    margin: .25em 0;
    padding: .5em .75em;
    box-sizing: border-box;
    border-radius: var(--radius, 3px);
    transition: background-color .1s;
    
    &:hover {

        background: rgba(white, .2);

    }
    &:focus {

        background: white;
        outline: none;

    }

    &[disabled] {

        cursor: not-allowed;
        pointer-events: none;
        opacity: .5;

    }
    &[type=range] {

        @extend %appearance-none;

        margin: 10px 0;
        padding-left: 0;
        padding-right: 0;
        background: transparent;
        border: none;
        box-sizing: border-box;

        &:hover {

            background: none;

            &::-webkit-slider-thumb {

                background: black;

            }
            &::-webkit-slider-runnable-track {

                background: rgba(white, .2);

            }

        }

        &::-webkit-slider-thumb {

            background: white;
            border-radius: 50%;
            appearance: none;
            -webkit-appearance: none;
            width: 1em;
            height: 1em;
            transition: background-color .4s;

        }
        &::-webkit-slider-runnable-track {

            border: var(--border, 3px solid white);
            border-radius: 20px;
            transition: background-color .4s;
            padding: 2px;

        }

        &.small {

            --border: none;

            height: 4px;
            margin: 10px 0px 10px 5px;
            max-width: 40px;
            background: none;
            background-image: svg-flexible('<rect x="0" y="0" width="1" height="1" fill="white" />');
            background-repeat: no-repeat;
            background-color: transparent;
            background-position: 100% 50%;
            background-size: calc(100% * (1 - var(--filled, 0))) 1px;

            + * {

                font-size: .75em;
                padding: .25em;
                border: 1px solid white;
                position: relative;

                &:after {

                    content: '';
                    position: absolute;
                    top: 50%;
                    right: 100%;
                    width: 0;
                    height: 0;
                    border-right: 7px solid white;
                    border-top: 10px solid transparent;
                    border-bottom: 10px solid transparent;
                    transform: translateY(-50%);

                }

            }

            &.complete {
                
                background-image: svg-flexible('<rect x="0" y="0" width="1" height="1" fill="gold" />');

                + * {

                    color: gold;
                    border-color: gold;

                    &:after {

                        border-right-color: gold;

                    }

                }
            
            }
           
            &::-webkit-slider-thumb {
                width: .5em;
                height: .5em;
            }
            &::-webkit-slider-runnable-track {
                
                padding: 0;
                border: none;
                background-image: svg-flexible('<rect x="0" y="0" width="1" height="1" fill="limegreen" />');
                background-repeat: no-repeat;
                background-color: transparent;
                background-position: 0 50%;
                background-size: calc(100% * var(--filled, 0)) 1px;

            }

            &:hover {
    
                &::-webkit-slider-thumb {
    
                    background: limegreen;
    
                }
    
            }

            // In case we have collected enough frame enough to satisfy the time limit to calculate the fps
            &.full {

                + * { color: green; }

            }

        }

    }
    &[type=color] {

        height: 3em;
        opacity: 1;
        background: auto;
        padding: 0;
        border: none;

        &:hover, &:focus {

            background: none;

        }

    }
    &[type=checkbox] {

        @extend %appearance-none;
        
        width: 3em;
        height: 1.5em;
        border-radius: .75em;
        padding: 0;
        margin: .25em;
        border: none;
        background-image:
            svg( '<circle cx=".5" cy=".5" r=".4" fill="gray" />' ),
            svg( '<circle cx=".5" cy=".5" r=".4" fill="white" />' );
        background-size: auto 100%, auto 100%;
        background-position: top 50% left 0%, top 50% right 200%;
        background-repeat: no-repeat, no-repeat;
        background-color: white;
        transition: background .4s;
        align-self: center;

        &:checked {

            background-position: top 50% left 200%, top 50% right 0%;
            background-color: limegreen;

        }

        + span {

            font-size: .5em;

        }

    }
    
}
label {

    span {
        
        display: block;
        text-align: center;
        
    }

    &.checkbox {

        display: flex;
        flex-direction: column;
        align-items: center;

        input {

            margin: .25em auto;

        }

        span {

            padding: .25em;

        }
        
    }

}
header {

    width: 100%;
    height: 100%;
    position: relative;
    top: 0;
    left: 0;
    display: grid;
    grid-template:
        "renderer  notifications" 1fr
        "developer developer    " auto
    /    1fr       auto;
    overflow: hidden;

    &:after {

        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 80px;
        background: linear-gradient(transparent, var(--dark));
        z-index: 1000;
        pointer-events: none;

    }

}
section, footer {

    width: 100%;
    box-sizing: border-box;
    padding: 20px 0;
    background: var(--dark);

}
nav {

    position: fixed;
    top: 0;
    left: 0;
    z-index: 2000;
    width: 100%;
    height: calc(13vmax * .650);
    box-sizing: border-box;
    padding: 20px;
    background: linear-gradient(black, transparent);
    transform: rotate3d(0,0,0,0deg);

    @include small {

        text-align: center;

    }

    .paused & { 
        
        background: transparent;

    }

}
h1 {

    font-size: 13vmax;
    white-space: nowrap;
    position: relative;
    left: 50%;
    transform: translate(-50%,-45%);
    text-align: center;
    width: 200vw;
    transition: background-color .1s, color .4s, box-shadow .5s;
    box-shadow: 0 0 70px 70px transparent;

    .paused & {

        background: var(--dark);
        box-shadow: 0 0 70px 70px var(--dark);

        @include small {

            color: var(--accent);

        }

    }

}
h2 {

    position: sticky;
    top: calc(13vmax * .65); // See transform property from h1 for values
    z-index: 2002;

}
h1, h2, dt {

    font-family: var(--font-title);

}
h2, h3, li, p {

    max-width: 800px;
    padding: 20px 40px;
    box-sizing: border-box;
    margin: 0px auto;

}
ul {

    overflow: hidden;
    padding: 20px 0;

}
footer {

    --dark: #222;
    padding-bottom: 50px;

    li {

        margin-bottom: 5px;
        padding: 0;
        font-size: inherit;

    }

}
p {

    font-size: 1rem;
    line-height: 2rem;

    a {
        
        color: cyan;
        background: svg-flexible( '<rect x="0" y="0" width="1" height="1" fill="cyan" />') no-repeat 0% 100% / 0px 1px transparent;
        transition: background-size .2s;

        &:hover {

            background-size: 100% 1px;

        }
    
    }

    strong {

        color: magenta;
        font-weight: inherit;

    }
}
dl {

    padding: 20px;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;

    p {
        
        padding: 20px 0;
    
    }

    dd {

        display: flex;
        flex-direction: column;
        height: 100%;

        .button, .link {

            margin-top: auto;
            margin-left: 0;

        }
    
    }

}
blockquote {

    padding: 20px 0;
    margin: 20px 0;
    font-size: .7em;
    color: #777;
    transition: color .4s;

    p {

        padding: 0 0 20px 0;
        max-height: 150px;
        overflow: hidden;
        position: relative;
        transition: max-height .5s;
        line-height: 1.25em;
        cursor: s-resize;

        &:before {

            content: '"';
            color: transparent;
            width: 1.5em;
            height: 1em;
            background: svg('<g transform="matrix(1,0,0,1,-0.0177635,-0.159267)">\
                    <g transform="matrix(2.63378,0,0,2.63378,-0.0529679,1.93527)">\
                        <path d="M0.027,-0.522C0.027,-0.553 0.038,-0.583 0.062,-0.612C0.085,-0.64 0.111,-0.661 0.14,-0.674L0.149,-0.655C0.126,-0.642 0.107,-0.626 0.091,-0.606C0.074,-0.587 0.066,-0.567 0.066,-0.547C0.066,-0.543 0.068,-0.541 0.07,-0.539C0.073,-0.537 0.076,-0.536 0.08,-0.536C0.101,-0.538 0.112,-0.539 0.114,-0.539C0.125,-0.539 0.136,-0.535 0.149,-0.527C0.161,-0.52 0.167,-0.506 0.167,-0.487C0.167,-0.471 0.162,-0.458 0.152,-0.447C0.141,-0.436 0.127,-0.43 0.107,-0.43C0.085,-0.43 0.066,-0.439 0.05,-0.456C0.035,-0.474 0.027,-0.496 0.027,-0.522ZM0.256,-0.519C0.256,-0.553 0.268,-0.585 0.292,-0.613C0.315,-0.641 0.341,-0.662 0.369,-0.674L0.378,-0.655C0.356,-0.642 0.336,-0.626 0.32,-0.607C0.304,-0.588 0.296,-0.568 0.296,-0.548C0.296,-0.545 0.297,-0.542 0.299,-0.539C0.301,-0.537 0.304,-0.536 0.309,-0.536C0.33,-0.538 0.341,-0.539 0.343,-0.539C0.355,-0.539 0.367,-0.535 0.379,-0.526C0.391,-0.517 0.397,-0.505 0.397,-0.488C0.397,-0.474 0.392,-0.462 0.383,-0.449C0.374,-0.436 0.358,-0.43 0.336,-0.43C0.313,-0.43 0.294,-0.439 0.279,-0.457C0.264,-0.475 0.256,-0.496 0.256,-0.519Z" style="fill:orangered;fill-rule:nonzero;"/>\
                    </g>\
                </g>') no-repeat 50% 100% / contain;
            display: inline-block;
            vertical-align: bottom;

        }

        &:after {

            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 2em;
            background: linear-gradient( transparent, var(--dark) );
            transition: .4s;

        }

    }

    &.expanded {

        color: #ececec;

        p {

            max-height: 200vh;
            cursor: n-resize;

            &:after {

                opacity: 0;

            }

        }

    }

}

.button, .link {

    padding: 20px;
    margin-left: 20px;
    background: var(--accent);
    display: inline-block;
    position: relative;
    z-index: 1;

}
.button {

    &:after {

        content: '';
        position: absolute;
        top: 0;
        left: 50%;
        height: 100%;
        width: 200vw;
        transform: translateX(-50%) scaleX(0);
        z-index: -1;
        background: inherit;
        transition: transform .4s;
        pointer-events: none;

    }
    
    &:hover {

        z-index: 20;

        &:after {
        
            transform: translateX(-50%) scaleX(1);
            transition: transform .6s;
    
        }

    }

}
.link {

    background: svg( '<path d="M .65 .25 L .9 .5 L .65 .75 M .9 .5 L .3 .5" fill="none" stroke="white" stroke-width=".07" stroke-linecap="round" />' ) no-repeat 100% 50% / auto 35% var(--accent);
    background-position: right 10px top 50%;

    transition: transform .4s, background-size 1s;

    &:not(.disabled):hover {

        transform: translateY(-10px);
        background-size: auto 75%;

    }

    &.disabled {
    
        background: svg( '<circle cx=".5" cy=".5" r=".5" fil="black" />' ) no-repeat 100% 100% / 10px auto gray;
        background-position: right 10px bottom 10px;
        opacity: .5;
        cursor: not-allowed;

        &.click {

            @keyframes dropdown {
                25% { transform: rotateZ(-90deg); }
                25% { transform: rotateZ(-100deg); }
                35% { transform: rotateZ(-85deg); opacity: .5; background-position: right 10px bottom 10px;  }
                70% { transform: rotateZ(-90deg) translateX(-100%); opacity: 0; background-position: right -10px bottom 10px; }
                80% { transform: rotateZ(0deg) translateX(-100%); opacity: 0; }
            }

            transform-origin: 100% 100%;
            animation: dropdown 1s;

        }
        
    }

}
.copyright {

    font-size: .7em;
    text-align: center;
    line-height: 1.4em;

}
.twitter {

    background: #1da1f2;
    
}
.grid {

    display: flex;
    align-items: stretch;
    grid-gap: 20px;
    padding: 20px;
    justify-content: center;
    flex-wrap: wrap;

    > * {

        width: 350px;
        min-width: 250px;
    
    }

}
.gallery {

    width: 100%;
    position: relative;
    margin: 20px 0;
    overflow: hidden;
    transition: transform .4s;
    padding-bottom: calc(100% / 16 * 10);

    img {

        transition: transform 1s, opacity 0s 1s;
        transform: translateX(-100%);
        object-fit: cover;
        object-position: 50% 50%;
        opacity: 0;
        cursor: e-resize;
        max-width: 100%;
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;

        &:last-child {

            cursor: w-resize;

        }

        &:first-child {

            // position: relative;
            // height: auto;

        }

        &.selected {

            transform: translateX(0%);
            z-index: 2;
            opacity: 1;
            transition: transform 1s, opacity 0s 0s;

            ~ img {

                transform: translateX(100%);

            }

        }
    

    }

    &:hover {

        transform: rotateZ(var(--rotate, 4deg)) scale(1.1);

    }

}
.accent {

    background-attachment: fixed;
    background-size: cover;

}
.zzz {

    position: absolute;
    left: 50%;
    top: 50%;
    width: 3em;
    height: 5em;
    transform: translate(-140%,-100%);
    font-weight: 800;
    z-index: 400;
    animation: fadein 1s;

    i {

        @keyframes zleepy {
            from { transform: scale(.3); }
            25% { left: 40%; }
            50% { opacity: 1; }
            60% { left: 60%; }
            to { top: 0; left: 0; }
        }

        display: inline-block;
        animation: zleepy 7s infinite;
        animation-fill-mode: both;
        opacity: 0;
        position: absolute;
        top: 100%;
        left: 100%;
        color: skyblue;

        @for $i from 1 through 4 {

            &:nth-child(#{$i}){

                animation-delay: -7s * ($i / 4);

            }

        }

    }

}

#renderer, #ui {
        
    position: relative;

}
#renderer, #ui {

    align-self: stretch;
    justify-self: stretch;

}
#renderer {

    grid-row: renderer/renderer;
    grid-column: renderer/notifications;
    z-index: 1;
    perspective: 200px;
    transition: opacity 1s;

    canvas {

        position: absolute;
        left: 0;
        top: 0;
        width: 100% !important;
        height: 100% !important;
        transition: opacity 1s;

    }

    &:after {

        @keyframes loader-rotation {
            from { transform: translate(-50%,-50%) rotateZ(0deg) scale(1); }
            50% { transform: translate(-50%,-50%) rotateZ(180deg) scale(1.3); opacity: .5; }
            to { transform: translate(-50%,-50%) rotateZ(360deg) scale(1); }
        }

        position: absolute;
        left: 50%;
        top: 50%;
        width: 1em;
        height: 1em;
        content: 'Loading';
        color: transparent;
        overflow: hidden;
        background: transparent;
        border: 4px solid var(--accent);
        border-left: 4px solid transparent;
        border-radius: 50%;
        opacity: 0;
        transition: opacity .2s;

    }

    .fadeout & {

        canvas {
            
            opacity: 0;

        }

        &:after {

            opacity: 1;
            animation: loader-rotation 1s infinite linear;

        }
    
    }
    
}
#ui {

    z-index: 2;
    grid-row: renderer/renderer;
    grid-column: renderer/notifcations;
    display: grid;
    grid-template:
        "tl  tc  tr " 1fr
        "ml  mc  mr  " 1fr
        "bl  bc  br " 1fr
    /    1fr 1fr 1fr;
    box-sizing: border-box;
    padding: 0;

}
#speech {

    --animation-collection: textin .4s;

    grid-column: bl/br;
    grid-row: ml/bl;
    align-self: end;
    justify-content: center;
    padding: 50px;
    transition: all .4s;
    text-align: center;
    background: white;
    position: relative;
    margin: var(--padding) auto 80px auto;
    max-width: 600px;
    width: 100%;
    background: transparent;
    color: var(--light);
    border-radius: 20px;
    animation: var(--animation-collection), fadein .3s;
    animation-fill-mode: backwards;
    display: flex;
    align-items: center;
    font-weight: 500;
    box-sizing: border-box;

    @include small {

        padding: 30px;

    }

    &:after {

        content: 'Next';
        position: absolute;
        left: 50%;
        top: 100%;
        width: 0;
        height: 0;
        overflow: hidden;
        transition: border-width .4s, width .4s, height .4s;
        border-left: 0px solid transparent;
        border-right: 0px solid transparent;
        border-top: 0px solid orange;
        background-color: transparent;
        transform: translate(-50%,-50%);
        color: transparent;


    }
    &.ready:after {

        border-left: .75rem solid transparent;
        border-right: .75rem solid transparent;
        border-top: 1rem solid orange;

    }
    &.final.ready:after {

        content: 'End Conversation';
        transition-duration: .3s, .3s, .3s;
        transition-delay: 0s, .3s, .3s;
        border-width: 0;
        width: 1.25rem;
        height: 1.25rem;
        background-color: orange;
        border-radius: 50%;
        box-shadow: inset -3px -3px rgba(black, .2);

    }

    .paused & {

        //opacity: .25;

    }
    .choices {

        position: absolute;
        right: 0;
        bottom: -20px;
        width: 30%;
        min-width: 320px;
        padding: 20px;
        background: white;
        color: black;
        transform: rotateZ(2deg);
        box-shadow: 1px 2px 5px black;
        max-height: 220px;
        overflow: scroll;
        animation: slideup .3s;
        z-index: 5;

        @include small {

            @keyframes slideupsmall {
                from { transform: translate(-50%,100%) rotateZ(2deg) }
            }

            width: 90%;
            left: 50%;
            right: auto;
            bottom: -60px;
            transform: translateX(-50%) rotateZ(2deg);
            animation: slideupsmall .3s;

        }

        li {

            text-align: left;
            padding: 10px;
            box-sizing: border-box;
            transition: padding-left .1s, color .1s;
            cursor: crosshair;

            &.selected {

                padding-left: 20px;
                background: svg('<path d="M .1 .1 L .3 .1 L .7 .5 L .5 .9 L .3 .9 L .5 .5 z" fill="red" />') no-repeat 0px 50% / auto 1em;
                cursor: pointer;
                color: orangered;

            }

            &.cancel {

                color: orangered;
                
            }

        }

    }
    .scream {

        @keyframes fiddle {
            20% { transform: translateY(-4px) rotateZ(0deg); }
            40% { transform: translateY(3px) rotateZ(2deg); }
            60% { transform: translateY(-6px) rotateZ(0deg); }
            80% { transform: translateY(2px) rotateZ(-2deg); }
        }

        font-family: var(--font-title);
        font-size: 2em;
        animation: fiddle 1s infinite steps(9, end);
        display: block;

        &.inline {

            display: inline-block;
            vertical-align: middle;

        }

    }
    
    &.sudden {

        @keyframes sudden {
            from { opacity: 0; }
            25% { transform: scale(3) rotateZ(-4deg); opacity: 1; }
        }
        @keyframes shake {
            20% { transform: rotateZ(2deg); }
            40% { transform: rotateZ(-2deg); }
            60% { transform: rotateZ(4deg); }
            80% { transform: rotateZ(-2deg); }
        }

        span {

            animation: sudden .4s .1s ease-in, shake .3s linear infinite; 
            animation-fill-mode: backwards;
            font-size: 2em;

        }

    }

    small {

        display: block;
        font-size: .7em;
        opacity: .8;
        line-height: 1.25em;

    }

    b {

        @keyframes flashy {
            from { color: red; }
            10% { color: green; }
            20% { color: blue; }
            30% { color: pink; }
            40% { color: yellow; }
            50% { color: orange; }
            60% { color: brown; }
            70% { color: teal; }
            80% { color: cyan; }
            90% { color: magenta; }
            to { color: red; }
        }

        animation: flashy 1s infinite;

    }

}


