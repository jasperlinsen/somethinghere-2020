@import "./scss/imports";

.zzz,
.poke {

    position: absolute;
    left: 50%;
    top: 50%;
    z-index: 400;
    animation: fadein 1s;

}
.zzz {

    width: 3em;
    height: 5em;
    transform: translate(-140%,-100%);
    font-weight: 800;
    pointer-events: none;

    i {

        @keyframes zleepy {
            from { transform: scale(.3); }
            25% { left: 40%; }
            50% { opacity: 1; }
            60% { left: 60%; }
            to { top: 0; left: 0; }
        }

        display: inline-block;
        animation: zleepy 7s infinite;
        animation-fill-mode: both;
        opacity: 0;
        position: absolute;
        top: 100%;
        left: 100%;
        color: skyblue;

        @for $i from 1 through 4 {

            &:nth-child(#{$i}){

                animation-delay: -7s * ($i / 4);

            }

        }

    }

}
.poke {

    @keyframes fadeinout {
        from { opacity: 0; }
        25% { opacity: 1; }
        50% { opacity: 0; }
    }

    @extend %interaction-button-icon;

    opacity: 0;
    width: 1em;
    height: 1em;
    transform: translate(-50%,-50%);
    animation: fadeinout 4s infinite;
    border-radius: 50%;
    cursor: pointer;

    .gamepad-active & {

        @keyframes fadeinout-longer {
            from { opacity: 0; }
            40% { opacity: 1; }
            80% { opacity: 0; }
        }

        animation-duration: 20s;
        animation-name: fadeinout-longer;

    }

}

#renderer, #ui {
        
    position: relative;

}
#renderer, #ui {

    align-self: stretch;
    justify-self: stretch;

}
#renderer {

    grid-row: renderer/renderer;
    grid-column: renderer/notifications;
    z-index: 1;
    perspective: 200px;
    transition: opacity 1s;

    canvas {

        position: absolute;
        left: 0;
        top: 0;
        width: 100% !important;
        height: 100% !important;
        transition: opacity 1s;

    }

    &:after {

        @keyframes loader-rotation {
            from { transform: translate(-50%,-50%) rotateZ(0deg) scale(1); }
            50% { transform: translate(-50%,-50%) rotateZ(180deg) scale(1.3); opacity: .5; }
            to { transform: translate(-50%,-50%) rotateZ(360deg) scale(1); }
        }

        position: absolute;
        left: 50%;
        top: 50%;
        width: 1em;
        height: 1em;
        content: 'Loading';
        color: transparent;
        overflow: hidden;
        background: transparent;
        border: 4px solid var(--accent);
        border-left: 4px solid transparent;
        border-radius: 50%;
        opacity: 0;
        transition: opacity .2s;

    }

    .fadeout & {

        canvas {
            
            opacity: 0;

        }

        &:after {

            opacity: 1;
            animation: loader-rotation 1s infinite linear;

        }
    
    }
    
}
#ui {

    z-index: 2;
    grid-row: renderer/renderer;
    grid-column: renderer/notifcations;
    display: grid;
    grid-template:
        "tl  tc  tr " 1fr
        "ml  mc  mr  " 1fr
        "bl  bc  br " 1fr
    /    1fr 1fr 1fr;
    box-sizing: border-box;
    padding: 0;

    .over-character & {

        cursor: pointer;

    }

}
#speech {

    grid-column: bl/br;
    grid-row: ml/bl;
    align-self: end;
    justify-content: center;
    transition: all .4s;
    text-align: center;
    background: white;
    position: relative;
    padding: 20px;
    margin: var(--padding) auto 10vh auto;
    max-width: 600px;
    background: transparent;
    color: var(--light);
    border-radius: 20px;
    animation: fadein .3s;
    animation-fill-mode: backwards;
    display: flex;
    align-items: center;
    font-weight: 500;
    box-sizing: border-box;

    @include small {

        padding: 30px;

    }

    &:after {

        content: '';
        position: absolute;
        left: 50%;
        top: 100%;
        width: 1.5em;
        height: 1.5em;
        overflow: hidden;
        transform: translate(-40%,-50%) rotateZ(420deg) scale(0);
        background: transparent;
        color: transparent;
        transition: transform .8s 1s ease-in;

        @media all and (pointer:coarse){

            width: 2.5em;
            height: 2.5em;
            transform: translate(-40%,-50%) rotateZ(0deg) scale(0);

        }

    }
    &.ready:after {

        @extend %interaction-button-icon;

        content: 'Next';
        transform: translate(-40%,-50%) rotateZ(20deg) scale(1);

        @media all and (pointer:coarse){

            transform: translate(-40%,-50%) rotateZ(0deg) scale(1);
            
        }

        .gamepad-active & {

            transform: translate(-40%,-50%) rotateZ(0deg) scale(1);

        }

    }
    &.final:after {

        content: 'End';

    }
    &.choosing:after {

        content: none;

    }

    .paused & {

        //opacity: .25;

    }
    .choices {

        @keyframes slideup {
            from { transform: translateY(100%); }
        }

        position: absolute;
        right: 0;
        bottom: -20px;
        width: 30%;
        min-width: 320px;
        padding: 20px;
        background: white;
        color: black;
        transform: rotateZ(2deg);
        box-shadow: 1px 2px 5px black;
        max-height: 220px;
        overflow: scroll;
        animation: slideup .3s;
        z-index: 5;

        @include small {

            @keyframes slideupsmall {
                from { transform: translate(-50%,100%) rotateZ(2deg) }
            }

            width: 90%;
            left: 50%;
            right: auto;
            bottom: -60px;
            transform: translateX(-50%) rotateZ(2deg);
            animation: slideupsmall .3s;

        }

        li {

            text-align: left;
            padding: 10px;
            box-sizing: border-box;
            transition: padding-left .1s, color .1s;
            cursor: crosshair;

            &.selected {

                padding-left: 20px;
                background: svg('<path d="M .1 .1 L .3 .1 L .7 .5 L .5 .9 L .3 .9 L .5 .5 z" fill="red" />') no-repeat 0px 50% / auto 1em;
                cursor: pointer;
                color: orangered;

            }

            &.cancel {

                color: orangered;
                
            }

        }

    }
    .scream {

        @keyframes fiddle {
            20% { transform: translateY(-4px) rotateZ(0deg); }
            40% { transform: translateY(3px) rotateZ(2deg); }
            60% { transform: translateY(-6px) rotateZ(0deg); }
            80% { transform: translateY(2px) rotateZ(-2deg); }
        }

        font-family: var(--font-title);
        font-size: 2em;
        animation: fiddle 1s infinite steps(9, end);
        display: block;

        &.inline {

            display: inline-block;
            vertical-align: middle;

        }

    }
    
    &.sudden {

        @keyframes sudden {
            from { opacity: 0; }
            25% { transform: scale(3) rotateZ(-4deg); opacity: 1; }
        }
        @keyframes shake {
            20% { transform: rotateZ(2deg); }
            40% { transform: rotateZ(-2deg); }
            60% { transform: rotateZ(4deg); }
            80% { transform: rotateZ(-2deg); }
        }

        span {

            animation: sudden .4s .1s ease-in, shake .3s linear infinite; 
            animation-fill-mode: backwards;
            font-size: 2em;

        }

    }

    small {

        display: block;
        font-size: .7em;
        opacity: .8;
        line-height: 1.25em;

    }

    b {

        @keyframes flashy {
            from { color: red; }
            10% { color: green; }
            20% { color: blue; }
            30% { color: pink; }
            40% { color: yellow; }
            50% { color: orange; }
            60% { color: brown; }
            70% { color: teal; }
            80% { color: cyan; }
            90% { color: magenta; }
            to { color: red; }
        }

        animation: flashy 1s infinite;

    }

}
#notifications {

    display: none;

}
#gamepad-cursor {

    @keyframes gamepad-cursor-in {
        from { transform: translate(-50%,-50%) scale(5); }
    }

    display: block;
    position: fixed;
    top: 50%;
    left: 50%;
    width: 1em;
    height: 1em;
    background: svg( '<circle cx=".5" cy=".5" r=".4" fill="#{rgba(white,.4)}" stroke="black" stroke-width=".05" />') no-repeat 50% 50% / 10px auto rgba(white, .1);
    z-index: 2003;
    transition: width .4s, height .4s, border-radius .8s, background-color .4s;
    transform: translate(-50%,-50%);
    border-radius: 50%;
    padding: 10px;
    pointer-events: none;
    animation: gamepad-cursor-in 1s;

    &.target-acquired {

        border-radius: 3px;

    }

    .over-character & {

        cursor: pointer;
        background-color: rgba(gold, .1);

    }

}
#gamepad-illustration {

    --stick: 30%;
    --stick-i: calc(var(--stick) * -1);

    @keyframes actionButton {
        from { transform: scale(1); }
        10% { transform: scale(1.2); }
        to { transform: scale(1); }
    }
    @keyframes scrollStick {
        from { transform: translateY(0%); }
        25% { transform: translateY(var(--stick-i)); }
        75% { transform: translateY(var(--stick)); }
        to { transform: translateY(0%); }
    }
    @keyframes cursorStick {
        from { transform: translate(var(--stick-i),0); }
        25% { transform: translate(0,var(--stick-i)); }
        50% { transform: translate(var(--stick),0); }
        75% { transform: translate(0,var(--stick)); }
        to { transform: translate(var(--stick-i),0); }
    }

    body.gamepad-active & &-R,
    body.gamepad-active & &-L,
    &-A,
    &-B {

        fill: white;
        transform-origin: 50% 50%;
    
    }
    body.gamepad-active & &-R {
        
        animation: scrollStick 5s infinite;
    
    }
    body.gamepad-active & &-L {
        
        animation: cursorStick 5s infinite linear;
    
    }
    &-A,
    &-B {
        
        animation: actionButton 5s infinite;
    
    }
    &-B {

        animation-delay: -3s;

    }
    &-pad {

        fill: var(--accent-alt, transparent);

    }
    &-background {

        fill: var(--accent);
        transition: fill .2s;

    }

}
#lighthouse-illustration {

    --accent: white;

    @keyframes light-anim {
        from { transform: rotateY(0deg); fill-opacity: 0; }
        40% { fill-opacity: .25; }
        70% { transform: rotateY(180deg); fill-opacity: 0; }
        to { transform: rotateY(180deg); fill-opacity: 0; }
    }
    @keyframes light-background-anim {
        from { fill-opacity: .2; }
        25% { fill-opacity: .2; }
        35% { fill-opacity: 1; }
        45% { fill-opacity: 1; }
        55% { fill-opacity: .2; }
        to { fill-opacity: .2; }
    }
    @keyframes light-lamp {
        from { transform: translateX(200%); }
        80% { transform: translateX(-200%); }
        to { transform: translateX(-200%); }
    }
    @keyframes light-shading-anim {
        from { fill-opacity: .8; }
        40% { fill-opacity: .1; }
        to { fill-opacity: .8; }
    }

    &-wrapper,
    &-shading {
        
        fill: var(--accent-alt, cyan);

    }
    &-shading {

        animation: light-shading-anim 10s infinite linear;

    }
    &-background {

        animation: light-background-anim 10s infinite linear;
        fill: var(--accent);
        fill-opacity: .2;
        transition: fill .3s;

    }
    &-light {

        animation: light-anim 10s infinite linear;
        transform-origin: 0 20%;
        fill: var(--accent);
        fill-opacity: .2;

    }
    &-lamp {

        animation: light-lamp 10s infinite linear;

    }

}
#modernweb-illustration {

    --accent: white;
    --accent-alt: orange;

    @keyframes dasharray {
        from { stroke-dasharray: 0 1000 0 0; }
        50% { stroke-dasharray: 1000 0 0 0; }
        to { stroke-dasharray: 0 0 0 1000; }
    }
    @keyframes dashoffset {
        from { stroke-dashoffset: 0; }
        50% { stroke-dashoffset: 1000; }
        to { stroke-dashoffset: 2000; }
    }

    path {

        animation: dashoffset 14s infinite linear, dasharray 14s infinite linear;
        stroke-dasharray: 1000 100;

    }
    &-web path {

        stroke-width: 1;
        stroke: var(--accent);

        &:nth-child(even){
            
            animation-delay: -5s;
            stroke-width: 3;
        
        }

    }

    &-background {

        fill: var(--dark);

    }
    &-cutout {

        stroke-width: 1;
        stroke: var(--accent-alt);
        animation-duration: 2s, 26s;

    }

}